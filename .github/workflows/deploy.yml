name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main # or your default branch

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"

      - name: Install additional build dependencies
        run: |
          npm install -g @rollup/plugin-node-resolve @rollup/plugin-commonjs @rollup/plugin-replace @rollup/plugin-json

      - name: Install dependencies
        run: npm install

      - name: Clean build directory
        run: |
          rimraf dist node_modules/.cache

      - name: Debug node_modules
        run: |
          echo "Checking for critical dependencies:"
          ls -la node_modules/process || echo "process module not found"
          ls -la node_modules/buffer || echo "buffer module not found"
          ls -la node_modules/crypto-browserify || echo "crypto-browserify module not found"
          npm list process buffer crypto-browserify || true

      - name: Check Vite Configuration
        run: |
          echo "Checking vite configuration file:"
          [ -f "vite.config.ts" ] && cat vite.config.ts || echo "vite.config.ts not found"
          [ -f "vite.config.js" ] && cat vite.config.js || echo "vite.config.js not found"
          echo "Checking for rollup config:"
          [ -f "rollup.config.js" ] && cat rollup.config.js || echo "rollup.config.js not found"

      - name: List package.json and check scripts
        run: |
          echo "Package.json content:"
          cat package.json
          echo "\n\nNode version:"
          node --version
          echo "\n\nNPM version:"
          npm --version

      - name: Check for Vite CLI
        run: |
          echo "Looking for vite CLI:"
          ls -la node_modules/.bin/vite || echo "vite CLI not found"
          ls -la node_modules/vite/bin || echo "vite bin directory not found"

      - name: Build project with detailed logs
        run: |
          echo "Starting build with DEBUG mode..."
          DEBUG=vite:* npm run build
        env:
          NODE_ENV: production
          DEBUG: "vite:*"

      # Copy public assets to dist
      - name: Copy static assets
        run: |
          echo "Ensuring public assets are in dist..."
          cp -r public/* dist/ || echo "No public directory found"
          [ -f "public/favicon.ico" ] && cp public/favicon.ico dist/ || echo "No favicon.ico in public directory"
          [ -f "favicon.ico" ] && cp favicon.ico dist/ || echo "No favicon.ico in root directory"

      # Add a special _redirects file for SPAs (GitHub Pages doesn't natively support SPAs)
      - name: Create _redirects file for SPA routing
        run: |
          mkdir -p dist
          if [ -f "dist/index.html" ]; then
            cp dist/index.html dist/404.html
          else
            echo "Warning: dist/index.html not found, cannot create 404.html"
            echo "<html><head><meta http-equiv=\"refresh\" content=\"0;URL='/Enterprise-Authentication-System/'\" /></head><body>Redirecting...</body></html>" > dist/404.html
          fi
          echo "/* /index.html 200" > dist/_redirects
          cp favicon.ico dist/ || echo "Warning: favicon.ico not found"
          mkdir -p dist/assets
          cp -r public/* dist/ || echo "Warning: No files in public directory"

      # Debug step to verify the dist contents
      - name: Debug - List dist directory contents
        run: |
          echo "Contents of dist directory:"
          ls -la dist
          echo "Contents of dist/assets (if exists):"
          [ -d "dist/assets" ] && ls -la dist/assets || echo "assets directory not found"
          echo "First 10 lines of dist/index.html:"
          [ -f "dist/index.html" ] && head -n 10 dist/index.html || echo "index.html not found"

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist
          branch: gh-pages
